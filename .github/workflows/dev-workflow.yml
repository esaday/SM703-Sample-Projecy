# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Dev Workflow - Test and check infra config

on:
  push:
    branches: [ bugfix-*, hotfix-*, feature-* ]

env:
  TF_WORKSPACE: "dev"
  TF_VAR_dist_env: "dev"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Run Unit Tests with Maven
      run: mvn -B test --file pom.xml

  deploy-infra:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    - name: Check out code
      uses: actions/checkout@v2
      
    - name: Run Terrascan
      id: terrascan
      uses: accurics/terrascan-action@main
      with:
        iac_type: 'terraform'
        iac_version: 'v14'
        policy_type: 'aws'
        only_warn: true
        iac_dir: tf

    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.4

    - name: Terraform Fmt
      id: fmt
      run: terraform fmt -check
      # continue-on-error: true

    - name: Terraform init
      id: init
      run: terraform init -backend-config=bucket=esad-703-tf-state -backend-config=key=environment/$TF_WORKSPACE.tfstate
      working-directory: tf

    - name: Terraform validate
      id: validate
      run: terraform validate
      working-directory: tf

    - name: Terraform plan
      id: plan
      run: terraform plan -no-color -out dev.tfplan
      working-directory: tf

    - name: Terraform Apply
      id: apply
      run: terraform apply dev.tfplan
      working-directory: tf